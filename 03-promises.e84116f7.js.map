{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,IACIC,EAAa,GAEjB,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAYF,SAASC,cAAc,iBAKzC,SAASE,EAAcC,EAAUC,EAAMC,GACrC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEJ,E,MAAUC,IAGpBI,EAAO,C,SAAEL,E,MAAUC,IAIlBD,IAAaE,GACdJ,EAAUY,gBAAgB,WAAY,GAAG,GAE1CT,EAAM,G,CAlBbN,EAAKgB,iBAAiB,UAsBtB,SAAsBC,GACpBA,EAAEC,iBACFf,EAAUgB,aAAa,WAAY,IAEnC,MAAMC,EAAW,IAAIC,SAASJ,EAAEK,eAEhC,IAAK,IAAKC,EAAMC,KAAUJ,EACxBrB,EAAWwB,GAAQC,EAGrB,IAAIC,EAAQC,OAAO3B,EAAWO,OAC1BqB,EAAOD,OAAO3B,EAAW4B,MACzBpB,EAASmB,OAAO3B,EAAWQ,QAE/B,IAAK,IAAIqB,EAAW,EAAGA,GAAYrB,EAAQqB,GAAY,EAErDxB,EAAcwB,EAAUH,EAAMlB,GAC3BsB,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAAjC,GAASkC,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAInDmB,GAASE,EAIXV,EAAEK,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nlet timerId = null;\nlet formValues = {};\n\nconst form = document.querySelector('.form');\nconst createBtn = document.querySelector('form > button')\n\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay,amount ) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n        // Fulfill\n      } else {\n        reject({ position, delay });\n        // Reject\n      }\n\n      if(position === amount) {\n        createBtn.removeAttribute('disabled', '')\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  createBtn.setAttribute('disabled', '')\n\n  const formData = new FormData(e.currentTarget);\n\n  for (let [name, value] of formData) {\n    formValues[name] = value;\n  }\n\n  let delay = Number(formValues.delay);\n  let step = Number(formValues.step);\n  let amount = Number(formValues.amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n   \n    createPromise(position, delay,amount)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n   \n    delay += step;\n  \n    \n  }\n  e.currentTarget.reset();\n  \n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formValues","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createBtn","$47d4ff9957288465$var$createPromise","position","delay","amount","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","removeAttribute","addEventListener","e","preventDefault","setAttribute","formData","FormData","currentTarget","name","value","delay1","Number","step","position1","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.e84116f7.js.map"}